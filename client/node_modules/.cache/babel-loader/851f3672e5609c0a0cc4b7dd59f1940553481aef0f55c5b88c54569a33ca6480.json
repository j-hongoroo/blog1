{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/bloggg/client/src/components/login/login.js\",\n  _s = $RefreshSig$();\nimport \"./style.css\";\nimport { useState } from \"react\";\nimport axios from \"../../axios\";\nimport { Navigate } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../context/userContext\";\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const {\n    setToken\n  } = useContext(UserContext);\n  const [email, setEmail] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [redirect, setRedirect] = useState(false);\n  const typeChangeEmail = e => {\n    setEmail(e.target.value);\n  };\n  const typeChangePassword = e => {\n    setPassword(e.target.value);\n  };\n  const handleClick = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post(\"/user/login\", {\n        email,\n        password\n      });\n      const user = jwt_decode(res.data.token);\n      setToken(user);\n      setRedirect(true);\n    } catch (err) {\n      console.log(err);\n      // setError(true)\n    }\n  };\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginTitle\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"loginForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: typeChangeEmail,\n        className: \"loginInput\",\n        placeholder: \"Enter your email...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: typeChangePassword,\n        className: \"loginInput\",\n        placeholder: \"Enter your password...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"loginButton\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"91mTp9T5Zj/D9tG7vhaR4Wxtp9o=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","axios","Navigate","useContext","UserContext","jwt_decode","jsxDEV","_jsxDEV","Login","_s","setToken","email","setEmail","password","setPassword","redirect","setRedirect","typeChangeEmail","e","target","value","typeChangePassword","handleClick","preventDefault","res","post","user","data","token","err","console","log","to","fileName","_jsxFileName","lineNumber","columnNumber","className","children","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/bloggg/client/src/components/login/login.js"],"sourcesContent":["import \"./style.css\"\r\nimport { useState } from \"react\";\r\nimport axios from \"../../axios\"\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport { UserContext } from \"../context/userContext\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport default function Login() {\r\n    const {setToken} = useContext(UserContext)\r\n    \r\n    const [email,setEmail]= useState(null);\r\n    const [password,setPassword]= useState(null);\r\n    const [redirect,setRedirect] = useState(false);\r\n    \r\n    const typeChangeEmail = (e) =>{\r\n        setEmail(e.target.value)\r\n    }\r\n    const typeChangePassword = (e) =>{\r\n        setPassword(e.target.value)\r\n    }\r\n    const handleClick = async(e)=>{\r\n      e.preventDefault()\r\n      try{\r\n        \r\n        const res = await axios.post(\"/user/login\",{\r\n        email,\r\n        password\r\n      });\r\n        const user = jwt_decode( res.data.token);\r\n        setToken(user)\r\n        setRedirect(true)\r\n      }catch(err){\r\n        console.log(err)\r\n        // setError(true)\r\n      }\r\n      \r\n    }\r\n    if(redirect){\r\n      return <Navigate to = {'/'}/>\r\n    }\r\n  return (\r\n    <div className=\"login\">\r\n        <div className=\"loginTitle\">Login</div>\r\n      <form className=\"loginForm\">\r\n        <label>Email</label>\r\n        <input type=\"text\" onChange={typeChangeEmail} className=\"loginInput\" placeholder=\"Enter your email...\" />\r\n        <label>Password</label>\r\n        <input type=\"password\" onChange={typeChangePassword} className=\"loginInput\" placeholder=\"Enter your password...\" />\r\n        <button onClick={handleClick} className=\"loginButton\">Login</button>\r\n      </form>\r\n      {/* {error==true && <span>Something went wrong!</span>} */}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}